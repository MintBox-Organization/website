/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MintBoxPool, MintBoxPoolInterface } from "../MintBoxPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610861806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638340f54914610046578063901754d71461005b578063d9caed1214610095575b600080fd5b610059610054366004610713565b6100a8565b005b6100836100693660046106bb565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100596100a3366004610713565b6101f9565b600081116100f45760405162461bcd60e51b8152602060048201526014602482015273141bdbdb0e881a5b9d985b1a5908185b5bdd5b9d60621b60448201526064015b60405180910390fd5b6001600160a01b0382166101425760405162461bcd60e51b8152602060048201526015602482015274506f6f6c3a20696e76616c6964206164647265737360581b60448201526064016100eb565b6101576001600160a01b0384163330846103ac565b6001600160a01b0380841660009081526020818152604080832093861683529290522054610185908261041d565b6001600160a01b038481166000818152602081815260408083209488168084529482529182902094909455805133815293840191909152820152606081018290527f7cfff908a4b583f36430b25d75964c458d8ede8a99bd61be750e97ee1b2f3a96906080015b60405180910390a1505050565b600081116102405760405162461bcd60e51b8152602060048201526014602482015273141bdbdb0e881a5b9d985b1a5908185b5bdd5b9d60621b60448201526064016100eb565b6001600160a01b03821661028e5760405162461bcd60e51b8152602060048201526015602482015274506f6f6c3a20696e76616c6964206164647265737360581b60448201526064016100eb565b6001600160a01b0383166000908152602081815260408083203384529091529020548111156102ff5760405162461bcd60e51b815260206004820152601960248201527f506f6f6c3a206e6f7420656e6f756768206465706f7369742e0000000000000060448201526064016100eb565b6001600160a01b03831660009081526020818152604080832033845290915290205461032b9082610430565b6001600160a01b03841660008181526020818152604080832033845290915290209190915561035b90838361043c565b604080513381526001600160a01b038086166020830152841691810191909152606081018290527f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e906080016101ec565b6040516001600160a01b03808516602483015283166044820152606481018290526104179085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610471565b50505050565b600061042982846107a2565b9392505050565b600061042982846107ba565b6040516001600160a01b03831660248201526044810182905261046c90849063a9059cbb60e01b906064016103e0565b505050565b60006104c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105439092919063ffffffff16565b80519091501561046c57808060200190518101906104e491906106f3565b61046c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100eb565b6060610552848460008561055a565b949350505050565b6060824710156105bb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100eb565b843b6106095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100eb565b600080866001600160a01b031685876040516106259190610753565b60006040518083038185875af1925050503d8060008114610662576040519150601f19603f3d011682016040523d82523d6000602084013e610667565b606091505b5091509150610677828286610682565b979650505050505050565b60608315610691575081610429565b8251156106a15782518084602001fd5b8160405162461bcd60e51b81526004016100eb919061076f565b600080604083850312156106cd578182fd5b82356106d881610813565b915060208301356106e881610813565b809150509250929050565b600060208284031215610704578081fd5b81518015158114610429578182fd5b600080600060608486031215610727578081fd5b833561073281610813565b9250602084013561074281610813565b929592945050506040919091013590565b600082516107658184602087016107d1565b9190910192915050565b600060208252825180602084015261078e8160408501602087016107d1565b601f01601f19169190910160400192915050565b600082198211156107b5576107b56107fd565b500190565b6000828210156107cc576107cc6107fd565b500390565b60005b838110156107ec5781810151838201526020016107d4565b838111156104175750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461082857600080fd5b5056fea264697066735822122039942471009b64d91ccdfd1966c298b9b7d54cff841755941ac04321a2b7f81264736f6c63430008020033";

export class MintBoxPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MintBoxPool> {
    return super.deploy(overrides || {}) as Promise<MintBoxPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MintBoxPool {
    return super.attach(address) as MintBoxPool;
  }
  connect(signer: Signer): MintBoxPool__factory {
    return super.connect(signer) as MintBoxPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintBoxPoolInterface {
    return new utils.Interface(_abi) as MintBoxPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintBoxPool {
    return new Contract(address, _abi, signerOrProvider) as MintBoxPool;
  }
}
