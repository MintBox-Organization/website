/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MintBoxPool, MintBoxPoolInterface } from "../MintBoxPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061071e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638340f54914610046578063901754d71461005b578063d9caed1214610095575b600080fd5b6100596100543660046105d0565b6100a8565b005b610083610069366004610578565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100596100a33660046105d0565b61015b565b6100bd6001600160a01b038416338484610269565b6001600160a01b03808416600090815260208181526040808320938616835292905220546100eb90826102da565b6001600160a01b0384811660008181526020818152604080832094881680845294825291829020949094558051918252928101919091529081018290527f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62906060015b60405180910390a1505050565b6001600160a01b0383166000908152602081815260408083203384529091529020548111156101c55760405162461bcd60e51b81526020600482015260116024820152702837b7b61d103737903232b837b9b4ba1760791b60448201526064015b60405180910390fd5b6001600160a01b0383166000908152602081815260408083203384529091529020546101f190826102ed565b6001600160a01b0384166000818152602081815260408083203384529091529020919091556102219083836102f9565b604080516001600160a01b038086168252841660208201529081018290527f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63989060600161014e565b6040516001600160a01b03808516602483015283166044820152606481018290526102d49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261032e565b50505050565b60006102e6828461065f565b9392505050565b60006102e68284610677565b6040516001600160a01b03831660248201526044810182905261032990849063a9059cbb60e01b9060640161029d565b505050565b6000610383826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104009092919063ffffffff16565b80519091501561032957808060200190518101906103a191906105b0565b6103295760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101bc565b606061040f8484600085610417565b949350505050565b6060824710156104785760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101bc565b843b6104c65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101bc565b600080866001600160a01b031685876040516104e29190610610565b60006040518083038185875af1925050503d806000811461051f576040519150601f19603f3d011682016040523d82523d6000602084013e610524565b606091505b509150915061053482828661053f565b979650505050505050565b6060831561054e5750816102e6565b82511561055e5782518084602001fd5b8160405162461bcd60e51b81526004016101bc919061062c565b6000806040838503121561058a578182fd5b8235610595816106d0565b915060208301356105a5816106d0565b809150509250929050565b6000602082840312156105c1578081fd5b815180151581146102e6578182fd5b6000806000606084860312156105e4578081fd5b83356105ef816106d0565b925060208401356105ff816106d0565b929592945050506040919091013590565b6000825161062281846020870161068e565b9190910192915050565b600060208252825180602084015261064b81604085016020870161068e565b601f01601f19169190910160400192915050565b60008219821115610672576106726106ba565b500190565b600082821015610689576106896106ba565b500390565b60005b838110156106a9578181015183820152602001610691565b838111156102d45750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146106e557600080fd5b5056fea264697066735822122022deed6497678ca51612574e4350edfd337f6ae7ecbb9583d6d2f529a2d9629564736f6c63430008020033";

export class MintBoxPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MintBoxPool> {
    return super.deploy(overrides || {}) as Promise<MintBoxPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MintBoxPool {
    return super.attach(address) as MintBoxPool;
  }
  connect(signer: Signer): MintBoxPool__factory {
    return super.connect(signer) as MintBoxPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintBoxPoolInterface {
    return new utils.Interface(_abi) as MintBoxPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintBoxPool {
    return new Contract(address, _abi, signerOrProvider) as MintBoxPool;
  }
}
