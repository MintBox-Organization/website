/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721SingleCollectionUpgradeable,
  ERC721SingleCollectionUpgradeableInterface,
} from "../ERC721SingleCollectionUpgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "AddToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MintToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "payToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "time",
        type: "uint64",
      },
    ],
    name: "SetClose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "SetContractURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "time",
        type: "uint64",
      },
    ],
    name: "SetOpen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "payToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "open",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "close",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct CollectionWrapper.Param",
        name: "param",
        type: "tuple",
      },
    ],
    name: "SetParam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "payToken",
        type: "address",
      },
    ],
    name: "SetPayToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "contract MintBoxPool",
        name: "pool",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "payToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "open",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "close",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct CollectionWrapper.Param",
        name: "param",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isLimited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isNeverClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "open",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "param",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "payToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "open",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "close",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract MintBoxPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "time",
        type: "uint64",
      },
    ],
    name: "setClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
    ],
    name: "setContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "time",
        type: "uint64",
      },
    ],
    name: "setOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "payToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "open",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "close",
            type: "uint64",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct CollectionWrapper.Param",
        name: "_param",
        type: "tuple",
      },
    ],
    name: "setParam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "payToken_",
        type: "address",
      },
    ],
    name: "setPayToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "valueOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260fb805463ffffffff191663e8a3d4851790553480156200002457600080fd5b50600054610100900460ff16620000425760005460ff16156200004c565b6200004c620000fa565b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000e0576000805460ff1961ff0019909116610100171660011790555b8015620000f3576000805461ff00191690555b506200011e565b600062000112306200011860201b620013f01760201c565b15905090565b3b151590565b6133f9806200012e6000396000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c8063883d87b111610146578063a49d8876116100c3578063c87b56dd11610087578063c87b56dd14610527578063cadf338f1461053a578063db5671fb1461054d578063e985e9c514610555578063f2fde38b14610591578063fcfff16f146105a45761025e565b8063a49d8876146104e0578063aea46b4c146104f3578063b80777ea14610506578063b88d4fde1461050c578063c2b6b58c1461051f5761025e565b8063938e3d7b1161010a578063938e3d7b1461049757806395d89b41146104aa57806396336b30146104b2578063a035b1fe146104c4578063a22cb465146104cd5761025e565b8063883d87b1146104245780638d1b223f1461043d5780638d4e2378146104505780638da5cb5b1461046b57806391b7f5ed146104845761025e565b806340c10f19116101df5780634f64b2be116101a35780634f64b2be146103ad5780634f6ccce7146103d05780636352211e146103e35780636f96e99c146103f657806370a0823114610409578063715018a61461041c5761025e565b806340c10f191461035257806342842e0e1461036557806342966c681461037857806343d726d61461038b57806347535d7b146103a55761025e565b806318160ddd1161022657806318160ddd146102f457806323b872dd146103065780632c8da560146103195780632f745c591461032c5780633919efb71461033f5761025e565b806301ffc9a71461026357806306fdde031461028b578063081812fc146102a0578063095ea7b3146102cb57806316f0115b146102e0575b600080fd5b610276610271366004612e3c565b6105b6565b60405190151581526020015b60405180910390f35b6102936105e6565b6040516102829190612fe9565b6102b36102ae366004612ed8565b610679565b6040516001600160a01b039091168152602001610282565b6102de6102d9366004612df5565b610713565b005b61012d546102b3906001600160a01b031681565b6099545b604051908152602001610282565b6102de610314366004612be6565b610829565b6102de610327366004612ccf565b61085b565b6102f861033a366004612df5565b610897565b6102de61034d366004612f08565b61092d565b6102f8610360366004612df5565b6109cf565b6102de610373366004612be6565b610af6565b6102de610386366004612ed8565b610b11565b6102f861013054600160401b90046001600160401b031690565b610276610b88565b6103c06103bb366004612ed8565b610bf3565b604051610282949392919061322b565b6102f86103de366004612ed8565b610cb5565b6102b36103f1366004612ed8565b610d56565b6102de610404366004612b92565b610dcd565b6102f8610417366004612b92565b610e08565b6102de610e8f565b61042c610ecd565b604051610282959493929190612fa7565b6102de61044b366004612f08565b610f91565b61027661013054600160401b90046001600160401b03161590565b6102b360fb54600160201b90046001600160a01b031690565b6102de610492366004612ed8565b611001565b6102de6104a5366004612e74565b61103c565b610293611077565b61012e546001600160a01b03166102b3565b61012f546102f8565b6102de6104db366004612ca2565b611086565b6102de6104ee366004612d1c565b611095565b6102de610501366004612ea6565b6111a1565b426102f8565b6102de61051a366004612c26565b6111dc565b610276611214565b610293610535366004612ed8565b611258565b6102f8610548366004612ed8565b6112e6565b6102766112fc565b610276610563366004612bae565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102de61059f366004612b92565b611350565b610130546001600160401b03166102f8565b60006105c1826113f6565b806105de575060fb5460e01b6001600160e01b0319908116908316145b90505b919050565b6060606580546105f590613308565b80601f016020809104026020016040519081016040528092919081815260200182805461062190613308565b801561066e5780601f106106435761010080835404028352916020019161066e565b820191906000526020600020905b81548152906001019060200180831161065157829003601f168201915b505050505090505b90565b6000818152606760205260408120546001600160a01b03166106f75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061071e82610d56565b9050806001600160a01b0316836001600160a01b0316141561078c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106ee565b336001600160a01b03821614806107a857506107a88133610563565b61081a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106ee565b610824838361141b565b505050565b610834335b82611489565b6108505760405162461bcd60e51b81526004016106ee90613102565b610824838383611580565b60fb546001600160a01b03600160201b90910416331461088d5760405162461bcd60e51b81526004016106ee90613083565b610824828261172b565b60006108a283610e08565b82106109045760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016106ee565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b60fb546001600160a01b03600160201b90910416331461095f5760405162461bcd60e51b81526004016106ee90613083565b600061097b61013054600160401b90046001600160401b031690565b11156109c35761099b61013054600160401b90046001600160401b031690565b816001600160401b031611156109c35760405162461bcd60e51b81526004016106ee9061304e565b6109cc81611836565b50565b60006109d9610b88565b610a4b5760405162461bcd60e51b815260206004820152603960248201527f45524337323153696e676c65436f6c6c656374696f6e5570677261646561626c60448201527f653a20636f6c6c656374696f6e206973206e6f74206f70656e0000000000000060648201526084016106ee565b610a5560016112e6565b90506000610a6c61012e546001600160a01b031690565b90508115610a8957610a896001600160a01b0382163330856118dd565b610a938183611948565b610a9d8484611a12565b610aa78484611b30565b6040805184815260208101849052309133916001600160a01b038516917f554e97a00857c86ee97815cd8d3bf2ae0e5e86c8661747ac45f913bd78be9a2d910160405180910390a45092915050565b610824838383604051806020016040528060008152506111dc565b610b1a3361082e565b610b7f5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016106ee565b6109cc81611b4a565b6000610ba561013054600160401b90046001600160401b03161590565b15610bbf5750610130546001600160401b03164211610676565b610130546001600160401b03164210801590610bee575061013054600160401b90046001600160401b03164211155b905090565b61013260205260009081526040902080546001820154600283018054929360ff8316936101009093046001600160a01b031692909190610c3290613308565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5e90613308565b8015610cab5780601f10610c8057610100808354040283529160200191610cab565b820191906000526020600020905b815481529060010190602001808311610c8e57829003601f168201915b5050505050905084565b6000610cc060995490565b8210610d235760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016106ee565b60998281548110610d4457634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152606760205260408120546001600160a01b0316806105de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106ee565b60fb546001600160a01b03600160201b909104163314610dff5760405162461bcd60e51b81526004016106ee90613083565b6109cc81611bf1565b60006001600160a01b038216610e735760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106ee565b506001600160a01b031660009081526068602052604090205490565b60fb546001600160a01b03600160201b909104163314610ec15760405162461bcd60e51b81526004016106ee90613083565b610ecb6000611c40565b565b61012e805461012f546101305461013180546001600160a01b039094169492936001600160401b0380841694600160401b90940416929190610f0e90613308565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3a90613308565b8015610f875780601f10610f5c57610100808354040283529160200191610f87565b820191906000526020600020905b815481529060010190602001808311610f6a57829003601f168201915b5050505050905085565b60fb546001600160a01b03600160201b909104163314610fc35760405162461bcd60e51b81526004016106ee90613083565b610130546001600160401b0316816001600160401b03161015610ff85760405162461bcd60e51b81526004016106ee9061304e565b6109cc81611c9f565b60fb546001600160a01b03600160201b9091041633146110335760405162461bcd60e51b81526004016106ee90613083565b6109cc81611d2b565b60fb546001600160a01b03600160201b90910416331461106e5760405162461bcd60e51b81526004016106ee90613083565b6109cc81611d61565b6060606680546105f590613308565b611091338383611da5565b5050565b600054610100900460ff166110b05760005460ff16156110b4565b303b155b6111175760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ee565b600054610100900460ff16158015611142576000805460ff1961ff0019909116610100171660011790555b61114c8787611e74565b61115588611c40565b61115f848661172b565b5061012d80546001600160a01b0319166001600160a01b03851617905561118582611eb5565b8015611197576000805461ff00191690555b5050505050505050565b60fb546001600160a01b03600160201b9091041633146111d35760405162461bcd60e51b81526004016106ee90613083565b6109cc81611eb5565b6111e63383611489565b6112025760405162461bcd60e51b81526004016106ee90613102565b61120e84848484611f77565b50505050565b600061123161013054600160401b90046001600160401b03161590565b1561123e57506000610676565b5061013054600160401b90046001600160401b0316421190565b6000818152606760205260409020546060906001600160a01b03166112dd5760405162461bcd60e51b815260206004820152603560248201527f45524337323153696e676c65436f6c6c656374696f6e5570677261646561626c604482015274329d103737b732bc34b9ba32b73a103a37b5b2b71760591b60648201526084016106ee565b6105de82611faa565b60006105de826112f661012f5490565b9061208c565b610130546000906001600160401b03161580159061132c575061013054600160401b90046001600160401b031615155b8015610bee575050610130546001600160401b03808216600160401b909204161190565b60fb546001600160a01b03600160201b9091041633146113825760405162461bcd60e51b81526004016106ee90613083565b6001600160a01b0381166113e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ee565b6109cc81611c40565b3b151590565b60006001600160e01b0319821663780e9d6360e01b14806105de57506105de8261209f565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061145082610d56565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166115025760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106ee565b600061150d83610d56565b9050806001600160a01b0316846001600160a01b031614806115485750836001600160a01b031661153d84610679565b6001600160a01b0316145b8061157857506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661159382610d56565b6001600160a01b0316146115fb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106ee565b6001600160a01b03821661165d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106ee565b6116688383836120ef565b61167360008261141b565b6001600160a01b038316600090815260686020526040812080546001929061169c9084906132c5565b90915550506001600160a01b03821660009081526068602052604081208054600192906116ca90849061328e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0383166117945760405162461bcd60e51b815260206004820152602860248201527f45524337323153696e676c65426f78577261707065723a20696e76616c69642060448201526731b932b0ba37b91760c11b60648201526084016106ee565b61013380549060006117a583613343565b90915550600081815261013260209081526040909120600181018054610100600160a81b0319166101006001600160a01b0389160217905584519293506117f4926002909101918501906129da565b507f04298a9d213656b5720191b0a938ab53ce9fac7cabbdf21f52fafd5e8249df1c818484604051611828939291906131f8565b60405180910390a192915050565b61013054600160401b90046001600160401b03161561188657610130546001600160401b03600160401b909104811690821611156118865760405162461bcd60e51b81526004016106ee9061304e565b610130805467ffffffffffffffff19166001600160401b0383169081179091556040519081527f17cabcab3398a138d9dfd3bc53e08963b12b9b4139ed7f78b29fca864e3c4aa0906020015b60405180910390a150565b6040516001600160a01b038085166024830152831660448201526064810182905261120e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120fa565b61012d54611963906001600160a01b038481169116836121cc565b61012d546001600160a01b0316638340f5498361198f60fb54600160201b90046001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401600060405180830381600087803b1580156119de57600080fd5b505af11580156119f2573d6000803e3d6000fd5b505061012d5461109192506001600160a01b0385811692501660006121cc565b6000818152610132602052604090206001015461010090046001600160a01b0316611a4f5760405162461bcd60e51b81526004016106ee906130b8565b6000818152610132602052604090206001015460ff1615611ac85760405162461bcd60e51b815260206004820152602d60248201527f45524337323153696e676c65426f78577261707065723a20696e76616c69642060448201526c3a37b5b2b71039ba30ba3ab99760991b60648201526084016106ee565b60008181526101326020526040908190206001908101805460ff19169091179055516001600160a01b038316907fdcdea898caf5576419f89caf69301592a4758349a0bd62300b58849213420a7290611b249084815260200190565b60405180910390a25050565b6110918282604051806020016040528060008152506122f0565b6000611b5582610d56565b9050611b63816000846120ef565b611b6e60008361141b565b6001600160a01b0381166000908152606860205260408120805460019290611b979084906132c5565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b61012e80546001600160a01b0319166001600160a01b0383169081179091556040519081527f50db60c1670b68cecbe174099eeb6f62f93782afbd762b4c2a54f54bc50f07ef906020016118d2565b60fb80546001600160a01b03838116600160201b818102640100000000600160c01b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610130546001600160401b039081169082161015611ccf5760405162461bcd60e51b81526004016106ee9061304e565b610130805467ffffffffffffffff60401b1916600160401b6001600160401b038416908102919091179091556040519081527fe1afb1f221a894b009c34ab0d951ffb009d7c559710a6f02db3af9e22b561687906020016118d2565b61012f8190556040518181527f4f5539c0409dfc4cb06f64cbd31237e1fbfe443f531584bf4dd77ec7fc5ba7b1906020016118d2565b8051611d75906101319060208401906129da565b507f5ca9f750836b0b7efdace104f07b5c9f0df0650c0fd24f5163e99044ae36ea52816040516118d29190612fe9565b816001600160a01b0316836001600160a01b03161415611e075760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106ee565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff16611e9b5760405162461bcd60e51b81526004016106ee90613153565b611ea3612323565b611eab612323565b611091828261234a565b805161012e80546001600160a01b0319166001600160a01b0390921691909117815560208083015161012f5560408301516101308054606086015167ffffffffffffffff199091166001600160401b039384161767ffffffffffffffff60401b1916600160401b939091169290920291909117905560808301518051849392611f4492610131929101906129da565b509050507fc83c766960a652cd1911e466e5829a576655224bcabac01d54cb0648dca3eb98816040516118d2919061319e565b611f82848484611580565b611f8e84848484612398565b61120e5760405162461bcd60e51b81526004016106ee90612ffc565b6000818152610132602052604090206001015460609061010090046001600160a01b0316611fea5760405162461bcd60e51b81526004016106ee906130b8565b600082815261013260205260409020600201805461200790613308565b80601f016020809104026020016040519081016040528092919081815260200182805461203390613308565b80156120805780601f1061205557610100808354040283529160200191612080565b820191906000526020600020905b81548152906001019060200180831161206357829003601f168201915b50505050509050919050565b600061209882846132a6565b9392505050565b60006001600160e01b031982166380ac58cd60e01b14806120d057506001600160e01b03198216635b5e139f60e01b145b806105de57506301ffc9a760e01b6001600160e01b03198316146105de565b6108248383836124a5565b600061214f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125629092919063ffffffff16565b805190915015610824578080602001905181019061216d9190612e20565b6108245760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106ee565b8015806122555750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561221b57600080fd5b505afa15801561222f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122539190612ef0565b155b6122c05760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016106ee565b6040516001600160a01b03831660248201526044810182905261082490849063095ea7b360e01b90606401611911565b6122fa8383612571565b6123076000848484612398565b6108245760405162461bcd60e51b81526004016106ee90612ffc565b600054610100900460ff16610ecb5760405162461bcd60e51b81526004016106ee90613153565b600054610100900460ff166123715760405162461bcd60e51b81526004016106ee90613153565b81516123849060659060208501906129da565b5080516108249060669060208401906129da565b60006001600160a01b0384163b1561249a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906123dc903390899088908890600401612f6a565b602060405180830381600087803b1580156123f657600080fd5b505af1925050508015612426575060408051601f3d908101601f1916820190925261242391810190612e58565b60015b612480573d808015612454576040519150601f19603f3d011682016040523d82523d6000602084013e612459565b606091505b5080516124785760405162461bcd60e51b81526004016106ee90612ffc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611578565b506001949350505050565b6001600160a01b038316612500576124fb81609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b612523565b816001600160a01b0316836001600160a01b0316146125235761252383826126bf565b6001600160a01b03821661253f5761253a8161275c565b610824565b826001600160a01b0316826001600160a01b031614610824576108248282612835565b60606115788484600085612879565b6001600160a01b0382166125c75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106ee565b6000818152606760205260409020546001600160a01b03161561262c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106ee565b612638600083836120ef565b6001600160a01b038216600090815260686020526040812080546001929061266190849061328e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016126cc84610e08565b6126d691906132c5565b600083815260986020526040902054909150808214612729576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b60995460009061276e906001906132c5565b6000838152609a6020526040812054609980549394509092849081106127a457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080609983815481106127d357634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255828152609a9091526040808220849055858252812055609980548061281957634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061284083610e08565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b6060824710156128da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106ee565b843b6129285760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106ee565b600080866001600160a01b031685876040516129449190612f4e565b60006040518083038185875af1925050503d8060008114612981576040519150601f19603f3d011682016040523d82523d6000602084013e612986565b606091505b50915091506129968282866129a1565b979650505050505050565b606083156129b0575081612098565b8251156129c05782518084602001fd5b8160405162461bcd60e51b81526004016106ee9190612fe9565b8280546129e690613308565b90600052602060002090601f016020900481019282612a085760008555612a4e565b82601f10612a2157805160ff1916838001178555612a4e565b82800160010185558215612a4e579182015b82811115612a4e578251825591602001919060010190612a33565b50612a5a929150612a5e565b5090565b5b80821115612a5a5760008155600101612a5f565b60006001600160401b03831115612a8c57612a8c613374565b612a9f601f8401601f191660200161325e565b9050828152838383011115612ab357600080fd5b828260208301376000602084830101529392505050565b80356105e18161338a565b600082601f830112612ae5578081fd5b61209883833560208501612a73565b600060a08284031215612b05578081fd5b612b0f60a061325e565b90508135612b1c8161338a565b815260208281013590820152612b3460408301612b7b565b6040820152612b4560608301612b7b565b606082015260808201356001600160401b03811115612b6357600080fd5b612b6f84828501612ad5565b60808301525092915050565b80356001600160401b03811681146105e157600080fd5b600060208284031215612ba3578081fd5b81356120988161338a565b60008060408385031215612bc0578081fd5b8235612bcb8161338a565b91506020830135612bdb8161338a565b809150509250929050565b600080600060608486031215612bfa578081fd5b8335612c058161338a565b92506020840135612c158161338a565b929592945050506040919091013590565b60008060008060808587031215612c3b578081fd5b8435612c468161338a565b93506020850135612c568161338a565b92506040850135915060608501356001600160401b03811115612c77578182fd5b8501601f81018713612c87578182fd5b612c9687823560208401612a73565b91505092959194509250565b60008060408385031215612cb4578182fd5b8235612cbf8161338a565b91506020830135612bdb8161339f565b60008060408385031215612ce1578182fd5b8235612cec8161338a565b915060208301356001600160401b03811115612d06578182fd5b612d1285828601612ad5565b9150509250929050565b600080600080600080600060e0888a031215612d36578283fd5b612d3f88612aca565b965060208801356001600160401b0380821115612d5a578485fd5b612d668b838c01612ad5565b975060408a0135915080821115612d7b578485fd5b612d878b838c01612ad5565b965060608a0135915080821115612d9c578485fd5b612da88b838c01612ad5565b9550612db660808b01612aca565b9450612dc460a08b01612aca565b935060c08a0135915080821115612dd9578283fd5b50612de68a828b01612af4565b91505092959891949750929550565b60008060408385031215612e07578081fd5b8235612e128161338a565b946020939093013593505050565b600060208284031215612e31578081fd5b81516120988161339f565b600060208284031215612e4d578081fd5b8135612098816133ad565b600060208284031215612e69578081fd5b8151612098816133ad565b600060208284031215612e85578081fd5b81356001600160401b03811115612e9a578182fd5b61157884828501612ad5565b600060208284031215612eb7578081fd5b81356001600160401b03811115612ecc578182fd5b61157884828501612af4565b600060208284031215612ee9578081fd5b5035919050565b600060208284031215612f01578081fd5b5051919050565b600060208284031215612f19578081fd5b61209882612b7b565b60008151808452612f3a8160208601602086016132dc565b601f01601f19169290920160200192915050565b60008251612f608184602087016132dc565b9190910192915050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612f9d90830184612f22565b9695505050505050565b6001600160a01b0386168152602081018590526001600160401b0384811660408301528316606082015260a06080820181905260009061299690830184612f22565b6000602082526120986020830184612f22565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f436f6c6c656374696f6e577261707065723a20496e76616c69642074696d652e604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602a908201527f45524337323153696e676c65426f78577261707065723a206e6f6e657869737460408201526932b73a103a37b5b2b71760b11b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020825260018060a01b0383511660208301526020830151604083015260408301516001600160401b0380821660608501528060608601511660808501525050608083015160a08084015261157860c0840182612f22565b8381526001600160a01b038316602082015260606040820181905260009061322290830184612f22565b95945050505050565b84815260ff841660208201526001600160a01b0383166040820152608060608201819052600090612f9d90830184612f22565b604051601f8201601f191681016001600160401b038111828210171561328657613286613374565b604052919050565b600082198211156132a1576132a161335e565b500190565b60008160001904831182151516156132c0576132c061335e565b500290565b6000828210156132d7576132d761335e565b500390565b60005b838110156132f75781810151838201526020016132df565b8381111561120e5750506000910152565b60028104600182168061331c57607f821691505b6020821081141561333d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156133575761335761335e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146109cc57600080fd5b80151581146109cc57600080fd5b6001600160e01b0319811681146109cc57600080fdfea264697066735822122026bea91bd5d5d47857b983d1245ffbbe950fb7c9e79a448a749ec220701460f464736f6c63430008020033";

export class ERC721SingleCollectionUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721SingleCollectionUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721SingleCollectionUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721SingleCollectionUpgradeable {
    return super.attach(address) as ERC721SingleCollectionUpgradeable;
  }
  connect(signer: Signer): ERC721SingleCollectionUpgradeable__factory {
    return super.connect(signer) as ERC721SingleCollectionUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721SingleCollectionUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as ERC721SingleCollectionUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721SingleCollectionUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721SingleCollectionUpgradeable;
  }
}
